image: Visual Studio 2017
clone_folder: c:\gopath\src\github.com\%APPVEYOR_REPO_NAME%

# skip_non_tags: true

# environment variables
environment:
  GOPATH: c:\gopath
  JFROG_CLI_OFFER_CONFIG: false
  VCS_URL: https://github.com/%APPVEYOR_REPO_NAME%
  # MYAPP: go-msi
  # VERSION: 1.0.1
  # MSVC_DEFAULT_OPTIONS : ON
  # BT_REPO_MSI : public-msi
  # BT_REPO_CHOCO : public-choco
  # BT_SUBJECT : bincrafters
  BT_KEY:
    secure: l5T2H4WucO8v6MeJH4SKGTiNtxehhonidN3tOna3FC3VxEzwPNNLgVEKXnBWvH0W

# environment:
#   GOPATH: c:\gopath
#   GO15VENDOREXPERIMENT: 1
#   CHOCOKEY:
#     secure: HRc9tf57V3c3dVyn8hvMkKeiwK2oyWvOSjNXembIAQctNx+GTGBBaHI3bh+8cIgy

# scripts that run after cloning repository

install:
  - set GH_APP=%APPVEYOR_PROJECT_NAME%
  - set GH_USER=%APPVEYOR_ACCOUNT_NAME%
  - set VERSION=%APPVEYOR_REPO_TAG_NAME%
  - set VERSION=1.0.2
  - set PATH=%WIX%\bin;%PATH%
  - set PATH=%GOPATH%\bin;%PATH%
  - set PATH=%ProgramFiles%\changelog;%PATH%
  - curl -fsSk -o changelog-amd64.msi -L "https://github.com/mh-cbon/changelog/releases/download/0.0.25/changelog-amd64.msi"
  - msiexec.exe /i changelog-amd64.msi /quiet
  - DEL /F changelog-amd64.msi
  - curl -fsSk -o jfrog.exe -L "https://api.bintray.com/content/jfrog/jfrog-cli-go/$latest/jfrog-cli-windows-amd64/jfrog.exe?bt_package=jfrog-cli-windows-amd64"
  - go get -u github.com/mh-cbon/never-fail
  - go get -u github.com/Masterminds/glide
  - glide install

  # - ps: Write-Host "APPVEYOR_BUILD_VERSION=$env:APPVEYOR_BUILD_VERSION";
  # - ps: Write-Host "APPVEYOR_REPO_TAG_NAME=$env:APPVEYOR_REPO_TAG_NAME";
  # - ps: if (-not (Test-Path env:APPVEYOR_REPO_TAG_NAME)) { $env:APPVEYOR_REPO_TAG_NAME = '0.0.2' }
  # - ps: ls env:APPVEYOR_REPO_TAG_NAME
  # - curl -fsSL -o C:\wix310-binaries.zip http://static.wixtoolset.org/releases/v3.10.3.3007/wix310-binaries.zip
  # - 7z x C:\wix310-binaries.zip -y -r -oC:\wix310
  # - set PATH=C:\wix310;%PATH%
  # - set PATH=%GOPATH%\bin;c:\go\bin;%PATH%
  # - go get -u github.com/Masterminds/glide

before_test:
  # do a manual installation of go-msi from pulled source code
  - mkdir C:\go-msi\
  - set GOARCH=amd64
  - go build -o C:\go-msi\go-msi.exe --ldflags "-X main.VERSION=%VERSION%" main.go
  - XCOPY /I /E templates C:\go-msi\templates
  # prepare tests packages
  - cd testing\\hello
  - glide install
  - cd ..
  - glide install
  - cd ..
  # run tests
  - go run testing\\main.go

# run custom scripts
build_script:
  # x386
  - set GOARCH=386
  - go build -o %GH_APP%.exe --ldflags "-X main.VERSION=%VERSION%" main.go
  - .\go-msi.exe make --msi %GH_APP%-%GOARCH%-%VERSION%.msi --version %VERSION% --arch %GOARCH%
  - cp %GH_APP%-%GOARCH%-%VERSION%.msi %GH_APP%-%GOARCH%.msi
  - .\go-msi.exe choco --path wix.json --version %VERSION% --input %GH_APP%-%GOARCH%-%VERSION%.msi --changelog-cmd "changelog ghrelease --version %VERSION%"
  # amd64
  - set GOARCH=amd64
  - go build -o %GH_APP%.exe --ldflags "-X main.VERSION=%VERSION%" main.go
  - .\go-msi.exe make --msi %GH_APP%-%GOARCH%-%VERSION%.msi --version %VERSION% --arch %GOARCH%
  - cp %GH_APP%-%GOARCH%-%VERSION%.msi %GH_APP%-%GOARCH%.msi
  - .\go-msi.exe choco --path wix.json --version %VERSION% --input %GH_APP%-%GOARCH%-%VERSION%.msi --changelog-cmd "changelog ghrelease --version %VERSION%"

deploy_script:
  - DIR "%APPVEYOR_BUILD_FOLDER%"
  - echo "%APPVEYOR_BUILD_FOLDER%"
  - never-fail jfrog bt pc --user %GH_USER% --key %BT_KEY% --licenses=MIT --vcs-url=https://github.com/%APPVEYOR_REPO_NAME% %GH_USER%/msi/%GH_APP%
  - jfrog bt upload --user %GH_USER% --key %BT_KEY%  --override=true --publish=true %GH_APP%-%GOARCH%-%VERSION%.msi %GH_USER%/msi/%GH_APP%
  - never-fail jfrog bt pc --user %GH_USER% --key %BT_KEY% --licenses=MIT --vcs-url=https://github.com/%APPVEYOR_REPO_NAME% %GH_USER%/choco/%GH_APP%
  - jfrog bt upload --user %GH_USER% --key %BT_KEY%  --override=true --publish=true %GH_APP%.%VERSION%.nupkg %GH_USER%/choco/%GH_APP%

# after_deploy:
#   - .\go-msi.exe choco --input %APPVEYOR_BUILD_FOLDER%\%APPVEYOR_PROJECT_NAME%-%GOARCH%.msi --version %APPVEYOR_REPO_TAG_NAME%
  # - choco push -k="'%CHOCOKEY%'" %APPVEYOR_PROJECT_NAME%.%APPVEYOR_REPO_TAG_NAME%.nupkg

artifacts:
  - path: '*-386.msi'
    name: msi-x86
  - path: '*-amd64.msi'
    name: msi-x64

deploy:
  - provider: GitHub
    artifact: msi-x86, msi-x64
    draft: false
    prerelease: false
    desription: "Release %APPVEYOR_REPO_TAG_NAME%"
    auth_token:
      secure: WVMaMjrLzXN8YNcnFRfcucTYWtvoDeE/4b2TUGQBZDvv7u+ERBQ///z5Q8qYSt0L
    on:
      branch:
        - master
        - /v\d\.\d\.\d/
        - /\d\.\d\.\d/          # not so great solution found here
                                # http://help.appveyor.com/discussions/problems/3483-github-tag-push-doesnt-trigger-build
      appveyor_repo_tag: true   # deploy on tag push only
